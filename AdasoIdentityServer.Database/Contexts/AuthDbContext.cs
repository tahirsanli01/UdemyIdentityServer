// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using AdasoIdentityServer.Database.Models;

namespace AdasoIdentityServer.Database.Contexts;

public partial class AuthDbContext : DbContext
{
    public AuthDbContext()
    {
    }

 

    public virtual DbSet<Consultant> Consultant { get; set; }

    public virtual DbSet<Department> Department { get; set; }

    public virtual DbSet<PersonelTitle> PersonelTitle { get; set; }

    public virtual DbSet<Roles> Roles { get; set; }

    public virtual DbSet<Users> Users { get; set; }



    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Consultant>(entity =>
        {
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(250);
        });

        modelBuilder.Entity<Department>(entity =>
        {
            entity.Property(e => e.Department1)
                .IsRequired()
                .HasColumnName("Department");
        });

        modelBuilder.Entity<PersonelTitle>(entity =>
        {
            entity.Property(e => e.Title).IsRequired();
        });

        modelBuilder.Entity<Roles>(entity =>
        {
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(250);
        });

        modelBuilder.Entity<Users>(entity =>
        {
            entity.Property(e => e.City).HasMaxLength(50);
            entity.Property(e => e.Country).HasMaxLength(50);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.Name).HasMaxLength(500);
            entity.Property(e => e.Password).HasMaxLength(50);
            entity.Property(e => e.Surname).HasMaxLength(50);
            entity.Property(e => e.TobbUyelikOid)
                .HasMaxLength(50)
                .HasColumnName("TOBB_UYELIK_OID");

            entity.HasOne(d => d.Consultant).WithMany(p => p.Users)
                .HasForeignKey(d => d.ConsultantId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Users_Consultant");

            entity.HasOne(d => d.Department).WithMany(p => p.Users)
                .HasForeignKey(d => d.DepartmentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Users_Department");

            entity.HasOne(d => d.PersonelTitle).WithMany(p => p.Users)
                .HasForeignKey(d => d.PersonelTitleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Users_PersonelTitle");

            entity.HasOne(d => d.Role).WithMany(p => p.Users)
                .HasForeignKey(d => d.RoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Users_Roles");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}