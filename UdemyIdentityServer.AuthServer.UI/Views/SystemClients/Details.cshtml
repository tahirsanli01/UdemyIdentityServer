@model UdemyIdentityServer.Database.Models.SystemClients

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    <link href="~/assets/plugins/select2/select2.min.css" rel="stylesheet" />
    <link href="~/assets/plugins/custom/datatables/datatables.bundle.css" rel="stylesheet" />
}
<div id="ModalCreateGoal" class="app-content">
    @await Component.InvokeAsync("DashBoardNavbar")
    <div class="d-flex flex-wrap flex-stack my-1">
        <h3 class="fw-bold my-2">
            Detay
        </h3>
        <div class="d-flex my-2">
            <a asp-action="Edit" class='btn btn-sm btn-primary fw-bolder' asp-route-id="@Model?.Id">Düzenle</a>
            <a class='btn btn-secondary btn-sm fw-bolder' asp-action="Index">Geri</a>
        </div>
    </div>
    <div class="card">
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ClientId)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ClientId)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.RequirePkce)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequirePkce)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ClientName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ClientName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ClientSecrets)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ClientSecrets)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AllowedGrantTypes)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.AllowedGrantTypes)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AllowedGrantTypeExplanation)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.AllowedGrantTypeExplanation)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.RedirectUris)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RedirectUris)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.PostLogoutRedirectUris)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.PostLogoutRedirectUris)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AccessTokenLifetime)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.AccessTokenLifetime)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AllowOfflineAccess)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.AllowOfflineAccess)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.RefreshTokenUsage)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RefreshTokenUsage)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.RefreshTokenUsageExplanation)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RefreshTokenUsageExplanation)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.RefreshTokenExpiration)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RefreshTokenExpiration)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.RefreshTokenExpirationExplanation)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RefreshTokenExpirationExplanation)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AbsoluteRefreshTokenLifetime)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.AbsoluteRefreshTokenLifetime)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.RequireConsent)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequireConsent)
            </dd>
        </dl>
    </div>
</div>